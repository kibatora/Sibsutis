% Задание: Исследование свойств белого шума

% Параметры
N = 400;      % количество строк в матрице (количество отсчетов в реализации)
K = 800;      % количество столбцов в матрице (количество реализаций)
mu = 8;        % математическое ожидание шума
sigma = 2;    % стандартное отклонение шума

% Генерируем матрицу белого гауссовского шума
E = mu + sigma * randn(N, K);

% Вычисляем среднее значение по каждому столбцу (по ансамблю)
mean_columns = mean(E); 

% Вычисляем среднее значение по каждой строке (по реализациям)
mean_rows = mean(E, 2);

% Строим графики
figure;
plot(1:K, mean_columns);
hold on;
plot(1:N, mean_rows, 'r');
xlabel('Номер реализации / отсчета');
ylabel('Среднее значение');
title('Среднее значение белого шума');
legend('Среднее по ансамблю', 'Среднее по реализациям');

% Задание 2
% Выбираем три пары значений n_i и n_j
pairs = [10, 20; 
         50, 150; 
         200, 300];

% Создаем subplots для трех пар
figure;
for i = 1:size(pairs, 1)
    n_i = pairs(i, 1);
    n_j = pairs(i, 2);

    % Диаграмма рассеяния
    subplot(1, 3, i);
    scatter(E(n_i, :), E(n_j, :), '.');
    xlabel(['ξ[' num2str(n_i) ']']);
    ylabel(['ξ[' num2str(n_j) ']']);
    title(['n_i = ' num2str(n_i) ', n_j = ' num2str(n_j)]);

    % Выборочная корреляция
    correlation = corrcoef(E(n_i, :), E(n_j, :));
    disp(['Выборочная корреляция для n_i = ' num2str(n_i) ...
          ', n_j = ' num2str(n_j) ': ' num2str(correlation(1,2))]);
end